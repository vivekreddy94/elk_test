apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ kibana.app }}
  namespace: {{ namespace }}
  annotations:
    configmap.reloader.stakater.com/reload: "kibana-config"
  labels:
    app: {{ kibana.app }}
spec:
  replicas: {{ kibana.replicas }}
  selector:
    matchLabels:
      app: {{ kibana.app }}
  template:
    metadata:
      labels:
        app: {{ kibana.app }}
    spec:
      containers:
      - name: {{ kibana.app }}
        image: {{ kibana.image }}:{{ kibana.tag }}
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: {{ kibana.cpulimit }}
            memory: {{ kibana.memorylimit }}
          requests:
            cpu: {{ kibana.cpurequest }}
            memory: {{ kibana.memoryrequest }}
        ports:
        - containerPort: {{ kibana.port }}
          name: ui
        livenessProbe:
          httpGet:
            port: ui
          periodSeconds: 30
        startupProbe:
          httpGet:
            port: ui
          failureThreshold: 30
          periodSeconds: 20
        volumeMounts:
        - name: config
          mountPath: /usr/share/kibana/config/kibana.yml
          subPath: kibana.yml
      volumes:
        - name: config
          configMap:
            name: kibana-config
            defaultMode: 420

